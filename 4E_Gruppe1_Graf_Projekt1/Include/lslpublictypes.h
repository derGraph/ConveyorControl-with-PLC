//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
#RE_IN_DE
#pragma define (store)
#pragma InclDefBlk _BusInterfaceSdiasDriveMng
_BusInterfaceSdiasDriveMng : CLASS_PUBLIC
#include "..\Class\_DriveMngBase\DriveMngBase.h"
	TYPE
#pragma pack(push, 1)
	  t_ReadValuePtr : STRUCT
	    a_SyncValues : ARRAY [0..4] OF DINT;
	    bs_InputStates : BSINT
	    [
	      1 OptionBoardInputState,
	    ];
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_WriteValuePtr : STRUCT
	    a_SyncValues : ARRAY [0..4] OF DINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
#pragma InclDefBlk _DriveAxisBase
_DriveAxisBase : CLASS_PUBLIC
#include "..\Class\_DriveMngBase\SDDDefinitions.h"
#include "..\Class\HwControl\HwControl.h"
	TYPE
#pragma pack(push, 1)
	  _SDDMEMHEADER : STRUCT
	    udCRC32 : UDINT;
	    udLen : UDINT;
	    udVersion : UDINT;
	    AxOffset : DINT;
	    AxLength : UDINT;
	    AxName : ARRAY [0..20] OF CHAR;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
#pragma InclDefBlk _DriveMngBase
_DriveMngBase : CLASS_PUBLIC
#include "..\Class\_DriveMngBase\SDDDefinitions.h"
#include "..\Class\_DriveMngBase\DriveMngBase.h"
	TYPE
#pragma pack(push, 1)
	  _SDDBFENTRY : STRUCT
	    bFinished : DINT;
	    uiParaIndex : UINT;
	    usParaSubIndex : USINT;
	    usRDWR : USINT;
	    bsDataInfo : BSINT
	    [
	      1 DataLength1,
	      2 DataLength2,
	      3 res1,
	      4 res2,
	      5 Offset1,
	      6 Offset2,
	      7 res3,
	      8 res4,
	    ];
	    dValue : ARRAY [0..11] OF USINT;
	    pThisObj : ^void;
	    usEntry : USINT;
	    bSent : BOOL;
	    udTimeStamp : UDINT;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  _SDDRINGBUFFER : STRUCT
	    pStart : ^_SDDBFENTRY;
	    pEnd : ^_SDDBFENTRY;
	    pRead : ^_SDDBFENTRY;
	    pWrite : ^_SDDBFENTRY;
	    ActEntries : DINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
#pragma InclDefBlk _VaranDriveBase
_VaranDriveBase : CLASS_PUBLIC
	TYPE
#pragma pack(push, 1)
	  t_ReadValuePtr : STRUCT
	    a_SyncValues : ARRAY [0..4] OF DINT;
	    bs_InputStates : BSINT
	    [
	      1 OptionBoardInputState,
	    ];
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_WriteValuePtr : STRUCT
	    a_SyncValues : ARRAY [0..4] OF DINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
Abschluss : CLASS_PUBLIC
	TYPE
	  state_type :
	  (
	    waitForInput:=0,
	    auto_mtr_on:=1,
	    auto_mtr_fill:=2,
	    hand_active:=3,
	    err
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
SdiasBase : CLASS_PUBLIC
#include "..\Class\SdiasManager\SdiasManager.h"
#include <.\lsl_st_hardwaretree.h>
#include "..\Class\SdiasBase\SdiasBase.h"
#include "..\Class\HwControl\HwControl.h"
	TYPE
	  t_b_SdiasFWState : BINT
	  [
	    1 VoltageNotOk,
	    2 NoSync,
	    3 FlashDataCRCError,
	    4 RAMDataCRCError,
	    5 FlashUnsafe,
	    6 BusTimeNotSupported,
	  ];
#pragma pack(push, 1)
	  t_s_SdiasFWStateStandard : STRUCT
	    ErrorBits : t_b_SdiasFWState;
	    Reserved : UINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
AM441 : CLASS_PUBLIC
	TYPE
	  t_AM_Errors : BINT
	  [
	    1 CableBreakAI1,
	    2 CableBreakAI2,
	    3 CableBreakAI3,
	    4 CableBreakAI4,
	    5 LowReference,
	    6 AiOvercurrent,
	  ];
#pragma pack(push, 1)
	  t_SDIAS_ErrorBits_AM441 : STRUCT
	    StandardErrors : SdiasBase::t_b_SdiasFWState;
	    AM_Errors : t_AM_Errors;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
class0 : CLASS_PUBLIC
	TYPE
	  _steps :
	  (
	    wait4start,
	    wait4light,
	    wait4time
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
MerkerEx : CLASS_PUBLIC
	TYPE
	  Cmdm_udLength :
	  (
	    GET_DATA_PTR,
	    EXCHANGE_DATA_PTR,
	    SAVE_DATA_TO_RAMEXFILE
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
SafetyBase : CLASS_PUBLIC
#include <.\lsl_st_safety.h>
#include "..\Class\SafetyManager\SafetyManager.h"
#include "..\Source\BusInterface.h"
#include <.\lsl_st_hardwaretree.h>
#include "..\Class\SafetyBase\SafetyBase.h"
	TYPE
#pragma pack(push, 1)
	  SDOHeader : STRUCT
	    StdHeader : t_SDOStdHeader;
	    SrcAdr : HDINT;
	    DstAdr : HDINT;
	    SessId : UDINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
SafetyCDIAS_Base : CLASS_PUBLIC
#include "..\Class\SafetyCDIAS_Base\SafetyCDIAS_Base.h"
#include <.\lsl_st_safety.h>
#include "..\Class\SafetyManager\SafetyManager.h"
	TYPE
	  FrameTypeType : BSINT
	  [
	    1 Cfg,
	    2 ToP,
	    3 Standard,
	    4 PDO,
	    5 TDO,
	    6 Reserved1,
	    7 Reserved2,
	    8 Response,
	  ];
#pragma pack(push, 1)
	  SDOStdHeader : STRUCT
	    CRC : UDINT;
	    Cmd : USINT;
	    Typ : FrameTypeType;
	    SeqNr : USINT;
	    Len : USINT;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  SDOHeader : STRUCT
	    StdHeader : SDOStdHeader;
	    SrcAdr : HDINT;
	    DstAdr : HDINT;
	    SessId : UDINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
VirtualBaseInit : CLASS_PUBLIC
	TYPE
	  CmdData :
	  (
	    GET_ADD_INFO,
	    READ_DATA,
	    WRITE_DATA,
	    READ_DATA_OFF,
	    WRITE_DATA_OFF
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)

#RE_IN_DE
